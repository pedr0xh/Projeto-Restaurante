/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package trabrestaurante;

import dao.PedidoDao;
import dao.ProdutoDao;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.Pedido;
import modelo.Produto;

/**
 *
 * @author Pedr0xh
 */
public class Carrinho extends javax.swing.JFrame {

    /**
     * Creates new form Carrinho
     */
    private Carrinho carrinho;
    private ProdutoDao produtoDao = new ProdutoDao();
    private Pedidos telaPedidos;
    public Carrinho() {
  
        this.produtoDao = new ProdutoDao();
        initComponents();
        //carregarProdutos();
        DefaultTableModel modelo = (DefaultTableModel) tblCarrinho.getModel();
        modelo.setRowCount(0);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCarrinho = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        btnFinalizar = new javax.swing.JButton();
        lblTotal = new javax.swing.JLabel();
        btnVerPedidos = new javax.swing.JButton();
        btnCardapio = new javax.swing.JButton();
        btnFechar = new javax.swing.JButton();

        jMenu1.setText("jMenu1");

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 0, 36)); // NOI18N
        jLabel1.setText("Carrinho ");

        tblCarrinho.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Produto", "Quantidade", "Valor"
            }
        ));
        jScrollPane1.setViewportView(tblCarrinho);

        jLabel2.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        jLabel2.setText("Valor total:");

        jButton1.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        jButton1.setText("Limpar carrinho");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnFinalizar.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        btnFinalizar.setText("Finalizar pedido");
        btnFinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFinalizarActionPerformed(evt);
            }
        });

        lblTotal.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        lblTotal.setText("R$ 00,00");

        btnVerPedidos.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        btnVerPedidos.setText("Ver Pedidos");
        btnVerPedidos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerPedidosActionPerformed(evt);
            }
        });

        btnCardapio.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        btnCardapio.setText("Cardapio");
        btnCardapio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCardapioActionPerformed(evt);
            }
        });

        btnFechar.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        btnFechar.setText("Finalizar Comanda");
        btnFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFecharActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(lblTotal))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnVerPedidos)
                            .addComponent(btnCardapio)
                            .addComponent(btnFinalizar)
                            .addComponent(jButton1)
                            .addComponent(btnFechar))))
                .addContainerGap(106, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnCardapio)
                        .addGap(18, 18, 18)
                        .addComponent(btnVerPedidos)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(btnFinalizar)
                        .addGap(18, 18, 18)
                        .addComponent(btnFechar)))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(lblTotal))
                .addContainerGap(130, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    DefaultTableModel modelo = (DefaultTableModel) tblCarrinho.getModel();
    modelo.setRowCount(0); // Remove todas as linhas
    lblTotal.setText("R$ 00,00");    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnFinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFinalizarActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) tblCarrinho.getModel();

        if (modelo.getRowCount() == 0) {
            JOptionPane.showMessageDialog(this, "Adicione itens ao carrinho primeiro.");
            return;
        }

        double valorTotal = 0.0;
        ArrayList<Produto> produtosDoPedido = new ArrayList<>();
        ProdutoDao pDao = new ProdutoDao();

        // Verifica se todos os produtos têm estoque suficiente
        for (int i = 0; i < modelo.getRowCount(); i++) {
            String nomeProduto = modelo.getValueAt(i, 0).toString();
            int quantidadePedido = Integer.parseInt(modelo.getValueAt(i, 1).toString());

            Produto p = pDao.carregarNome(nomeProduto);
            if (p != null) {
                if (quantidadePedido > p.getQuantidade()) {
                    JOptionPane.showMessageDialog(this, "Estoque insuficiente para: " + nomeProduto);
                    return; // Interrompe se não tiver estoque
                }
            } else {
                JOptionPane.showMessageDialog(this, "Produto não encontrado: " + nomeProduto);
                return;
            }
        }

        // Tudo certo, agora processa o pedido
        for (int i = 0; i < modelo.getRowCount(); i++) {
            String nomeProduto = modelo.getValueAt(i, 0).toString();
            int quantidade = Integer.parseInt(modelo.getValueAt(i, 1).toString());

            String valorStr = modelo.getValueAt(i, 2).toString().replace("R$", "").replace(",", ".").trim();
            double valorItem = Double.parseDouble(valorStr);
            valorTotal += valorItem;

            Produto p = pDao.carregarNome(nomeProduto);
            if (p != null) {
                p.setQuantidade(quantidade);
                produtosDoPedido.add(p);

                // Atualiza o estoque no banco
                int novoEstoque = p.getQuantidadeBanco() - quantidade; // usamos o valor original
                pDao.atualizarQuantidade(p.getId(), novoEstoque);
            }
        }

        int mesa = 1;
        Pedido pedido = new Pedido(valorTotal, mesa, produtosDoPedido);
        PedidoDao dao = new PedidoDao();
        dao.inserir(pedido);

        JOptionPane.showMessageDialog(this, "Pedido finalizado com sucesso!");

        modelo.setRowCount(0);
        lblTotal.setText("R$ 00,00");
    }//GEN-LAST:event_btnFinalizarActionPerformed

    private void btnVerPedidosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerPedidosActionPerformed
        if (telaPedidos == null || !telaPedidos.isDisplayable()) {
            telaPedidos = new Pedidos();
        }
        telaPedidos.setVisible(true);
    }//GEN-LAST:event_btnVerPedidosActionPerformed

    private void btnCardapioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCardapioActionPerformed
        new Cardapio(this, produtoDao).setVisible(true);
    }//GEN-LAST:event_btnCardapioActionPerformed

    private void btnFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFecharActionPerformed
        int mesa = 1; // ou obtenha de uma variável/dado da interface

    int opcao = JOptionPane.showConfirmDialog(this, 
        "Tem certeza que deseja fechar a comanda da mesa " + mesa + "?", 
        "Fechar Comanda", 
        JOptionPane.YES_NO_OPTION);

    if (opcao == JOptionPane.YES_OPTION) {
        PedidoDao dao = new PedidoDao();
        dao.removerPedidosPorMesa(mesa);

        JOptionPane.showMessageDialog(this, "Comanda da mesa " + mesa + " foi fechada com sucesso!");
        
        if (telaPedidos != null) {
            telaPedidos.limparTabela();
        }       
    }
    }//GEN-LAST:event_btnFecharActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Carrinho.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Carrinho.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Carrinho.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Carrinho.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Carrinho().setVisible(true);
            }
        });
    }
    private void atualizarValorTotal() {
        DefaultTableModel modelo = (DefaultTableModel) tblCarrinho.getModel();
        double total = 0.0;

        for (int i = 0; i < modelo.getRowCount(); i++) {
            String valorStr = modelo.getValueAt(i, 2).toString().replace("R$", "").replace(",", ".").trim();
            total += Double.parseDouble(valorStr);
        }

        lblTotal.setText(String.format("R$ %.2f", total));
    }

    
    public  void adicionarItemTabela(String nomeProduto, int quantidade, double precoUnitario) {
    DefaultTableModel modelo = (DefaultTableModel) tblCarrinho.getModel();
    
    // Verifica se o item já existe
    for (int i = 0; i < modelo.getRowCount(); i++) {
        if (modelo.getValueAt(i, 0).equals(nomeProduto)) {
            int qtdAtual = (int) modelo.getValueAt(i, 1);
            modelo.setValueAt(qtdAtual + quantidade, i, 1);
            modelo.setValueAt((qtdAtual + quantidade) * precoUnitario, i, 2);
            atualizarValorTotal();
            return;
        }
    }

    // Se não existe, adiciona novo
    modelo.addRow(new Object[]{nomeProduto, quantidade, quantidade * precoUnitario});
    atualizarValorTotal();
}


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCardapio;
    private javax.swing.JButton btnFechar;
    private javax.swing.JButton btnFinalizar;
    private javax.swing.JButton btnVerPedidos;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JTable tblCarrinho;
    // End of variables declaration//GEN-END:variables
}
